{
  "testConfig": [
    {
      "route": "/event-subscriptions",
      "variants": {
        "POST": [
          {
            "httpCode": 201,
            "requirementID": "TNT.2.2.API.CHK.5",
            "description": "POST /event-subscriptions creates a new subscription check"
          },
          {
            "httpCode": 201,
            "requirementID": "TNT.2.2.API.CHK.6",
            "description": " POST /event-subscriptions Must provide a valid callback URL"
          },
          {
            "httpCode": 201,
            "requirementID": "TNT.2.2.API.CHK.7",
            "description": "POST /event-subscriptions creates a new subscription with major API version provided in the URI"
          },
          {
            "httpCode": 201,
            "requirementID": "TNT.2.2.API.CHK.8",
            "description": "POST /event-subscriptions Must provide a valid secret"
          },
          {
            "httpCode": 201,
            "requirementID": "TNT.2.2.API.CHK.9",
            "description": "POST /event-subscriptions fails to creates  a new subscription if API version not provided in the URI"
          },
          {
            "httpCode": 201,
            "requirementID": "TNT.2.2.API.CHK.10",
            "description": "POST /event-subscriptions fails to creates  a new subscription if no callback  response"
          },
          {
            "httpCode": 201,
            "requirementID": "TNT.2.2.API.CHK.2",
            "description": "POST /event-subscriptions response with additional enum",
            "responseDecorator": {
              "patch": {
                "eventType": [
                  "DUMMY"
                ]
              }
            }
          },
          {
            "httpCode": 201,
            "requirementID": "TNT.2.2.API.CHK.11",
            "description": "POST /event-subscriptions-response with optional field",
            "responseDecorator": {
              "patch": {
                "DummyField": "DummyValue"
              }
            }
          },
          {
            "httpCode": 400,
            "requirementID": "TNT.2.2.API.CHK.12",
            "description": "POST /event-subscriptions response with httpCode 400",
            "responseDecorator": {
              "patch": {
                "errors": {
                  "reason": "BadRequest",
                  "message": "Invalid field value"
                },
                "statusCode": 400,
                "statusCodeText": "Bad request"
              }
            }
          },
          {
            "httpCode": 500,
            "requirementID": "TNT.2.2.API.CHK.13",
            "description": "POST /event-subscriptions Response with httpCode 500",
            "responseDecorator": {
              "patch": {
                "errors": {
                  "reason": "InternalServerException",
                  "message": "Internal Server Exception"
                },
                "statusCode": 500,
                "statusCodeText": "Internal Server Exception"
              }
            }
          },
          {
            "httpCode": 204,
            "requirementID": "TNT.2.2.SUB.CSM.7",
            "description": "The callback endpoint must reject notifications where eventCreatedDateTime is more than 10 seconds in the future with a response code in the 4XX range"
          }
        ],
        "GET": [
          {
            "httpCode": 200,
            "requirementID": "TNT.2.2.SUB.CSM.1",
            "description": "/event-subscriptions/{subscriptionId} Respond to a HEAD request with a HTTP 204 success status to facilitate validation"
          },
          {
            "httpCode": 200,
            "requirementID": "TNT.2.2.SUB.CSM.8",
            "description": "The callback endpoint is not reachable"
          },
          {
            "httpCode": 404,
            "requirementID": "TNT.2.2.ERR.PRV.404",
            "description": "POST /event-subscriptions-Response with httpCode 404",
            "responseDecorator": {
              "patch": {
                "errors": {
                  "reason": "No Subscription found",
                  "message": "No EventSubscription was found for given id"
                },
                "statusCode": 404,
                "statusCodeText": "No Subscription found"
              }
            }
          },
          {
            "httpCode": 200,
            "requirementID": "TNT.2.2.API.PRV.2",
            "description": "GET /event-subscriptions-Request with sorting parameter",
            "requestMatcher": {
              "queryParameter": [
                "sort"
              ]
            }
          },
          {
            "httpCode": 200,
            "requirementID": "TNT.2.2.API.PRV.2",
            "description": "GET /event-subscriptions-request with limit parameter",
            "requestMatcher": {
              "queryParameter": [
                "limit"
              ]
            }
          },
          {
            "httpCode": 200,
            "requirementID": "TNT.2.2.API.PRV.2",
            "description": "GET /event-subscriptions-request with cursor parameter",
            "requestMatcher": {
              "queryParameter": [
                "cursor"
              ]
            }
          },
          {
            "httpCode": 200,
            "requirementID": "TNT.2.2.API.PRV.1",
            "description": "GET /event-subscriptions-request with header API-Version",
            "requestMatcher": {
              "header": [
                "API-Version"
              ]
            }
          }
        ]
      }
    },
    {
      "route": "/event-subscriptions/{subscriptionId}",
      "variants": {
        "PUT": [
          {
            "httpCode": 400,
            "requirementID": "TNT.2.2.ERR.PRV.400",
            "description": "PUT /event-subscriptions-response with httpCode 400",
            "responseDecorator": {
              "patch": {
                "errors": {
                  "reason": "BadRequest",
                  "message": "Bad request"
                },
                "statusCode": 400,
                "statusCodeText": "Bad request"
              }
            }
          },
          {
            "httpCode": 404,
            "requirementID": "TNT.2.2.ERR.PRV.404",
            "description": "PUT /event-subscriptions-response with httpCode 404",
            "responseDecorator": {
              "patch": {
                "errors": {
                  "reason": "NotFound",
                  "message": "No EventSubscription was found for given id"
                },
                "statusCode": 404,
                "statusCodeText": "Not Found"
              }
            }
          }
        ],
        "GET": [
          {
            "httpCode": 404,
            "requirementID": "TNT.2.2.ERR.PRV.404",
            "description": "GET /event-subscriptions/{subscriptionId} response with httpCode 404",
            "responseDecorator": {
              "patch": {
                "errors": {
                  "reason": "NotFound",
                  "message": "No EventSubscription was found for given id"
                },
                "statusCode": 404,
                "statusCodeText": "Not Found"
              }
            }
          }
        ],
        "DELETE": [
          {
            "httpCode": 404,
            "requirementID": "TNT.2.2.ERR.PRV.404",
            "description": "DELETE /event-subscriptions-response with httpCode 404",
            "responseDecorator": {
              "patch": {
                "errors": {
                  "reason": "NotFound",
                  "message": "No EventSubscription was found for given id"
                },
                "statusCode": 400,
                "statusCodeText": "Not Found"
              }
            }
          }
        ]
      }
    },
    {
      "route": "/event-subscriptions/{subscriptionId}/secret",
      "variants": {
        "PUT": [
          {
            "httpCode": 204,
            "requirementID": "TNT.2.2.SUB.CSM.2",
            "description": "PUT /event-subscriptions/{subscriptionId}/secret there is rotation or update of the shared secret key possibility"
          },
          {
            "httpCode": 204,
            "requirementID": "TNT.2.2.SUB.CSM.3",
            "description": "the secret shared by subscriber in base64 format and has a minimum of 32 bytes"
          },
          {
            "httpCode": 204,
            "requirementID": "TNT.2.2.SUB.CSM.4",
            "description": "The callback endpoint must respond to a correctly formatted and signed notification with response code in the 2XX range for successful responses"
          },
          {
            "httpCode": 204,
            "requirementID": "TNT.2.2.SUB.CSM.5",
            "description": "The callback endpoint must respond to an incorrectly signed notification with a response code in the 4XX range, where 401 is recommended"
          },
          {
            "httpCode": 204,
            "requirementID": "TNT.2.2.SUB.CSM.6",
            "description": "The callback endpoint must respond to an incorrectly formatted notification with a response code in the 4XX range"
          },
          {
            "httpCode": 204,
            "requirementID": "TNT.2.2.SUB.CSM.8",
            "description": "The callback endpoint is not reachable"
          },
          {
            "httpCode": 204,
            "requirementID": "TNT.2.2.SUB.CSM.9",
            "description": "check correct post response with a HTTP 204 no content success status facilitate validation"
          },
          {
            "httpCode": 404,
            "requirementID": "TNT.2.2.ERR.PRV.404",
            "description": "PUT /event-subscriptions/{subscriptionId}/secret-response with httpCode 404",
            "responseDecorator": {
              "patch": {
                "errors": {
                  "reason": "NotFound",
                  "message": "Not Found"
                },
                "statusCode": 404,
                "statusCodeText": "Not Found"
              }
            }
          }
        ]
      }
    },
    {
      "route": "/events",
      "variants": {
        "GET": [
          {
            "httpCode": 200,
            "requirementID": "TNT.2.2.API.CHK.1",
            "description": "GET /events request with Query Parameters eventType",
            "requestMatcher": {
              "queryParameter": [
                "eventType"
              ]
            }
          },
          {
            "httpCode": 400,
            "requirementID": "TNT.2.2.ERR.PRV.400",
            "description": "GET /events-response with httpCode 400",
            "responseDecorator": {
              "patch": {
                "errors": {
                  "reason": "BadRequest",
                  "message": "Bad request"
                },
                "statusCode": 400,
                "statusCodeText": "Bad request"
              }
            }
          },
          {
            "httpCode": 500,
            "requirementID": "TNT.2.2.ERR.PRV.500",
            "description": "GET /events-response with httpCode 500",
            "responseDecorator": {
              "patch": {
                "errors": {
                  "reason": "InternalServerError",
                  "message": "Internal Server Error"
                },
                "statusCode": 500,
                "statusCodeText": "Internal Server Error"
              }
            }
          },
          {
            "httpCode": 200,
            "requirementID": "TNT.2.2.EVN.PRV.1",
            "description": "GET /events-request with sorting parameter",
            "requestMatcher": {
              "queryParameter": [
                "sort"
              ]
            }
          },
          {
            "httpCode": 200,
            "requirementID": "TNT.2.2.EVN.PRV.1",
            "description": "GET /events-request with limit parameter",
            "requestMatcher": {
              "queryParameter": [
                "limit"
              ]
            }
          },
          {
            "httpCode": 200,
            "requirementID": "TNT.2.2.API.PRV.4",
            "description": "GET /events-request with cursor parameter",
            "requestMatcher": {
              "queryParameter": [
                "cursor"
              ]
            }
          },
          {
            "httpCode": 200,
            "requirementID": "TNT.2.2.API.PRV.1",
            "description": "GET /events-request with header API-Version",
            "requestMatcher": {
              "header": [
                "API-Version"
              ]
            }
          }
        ]
      }
    }
  ]
}